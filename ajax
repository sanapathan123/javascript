// //sync execution

// function additionA() {
//     console.log('A')
// }

// function additionB() {
//     console.log('B')
// }

// additionB()
// additionA()

// console.log('--------------------------')

// //Async
// function additionC() {
//     setTimeout(function () {
//         console.log('C')

//     }, 2000)
// }

// function additionD() {
//     console.log('D')
// }

// additionC()
// additionD()

//console.log("--------------------------------------")
//program3
//api-----usercreate
//usercreate-----id
//id fetch------userinfo


// function getinfo() {
//     setTimeout(function () {
//         console.log('user created')
//     }, 3000)

//     setTimeout(function () {
//         console.log('id')
//     }, 2000)

//     setTimeout(function () {
//         console.log('get uerinfo')
//     }, 1000)
// }

// getinfo()
// console.log('--------------------------------')

// //Asyn function execute sync
// //call back hell

// // function getinfo() {
// //     setTimeout(function () {
// //         console.log('user created')
// //         setTimeout(function () {
// //             console.log('id')
// //             setTimeout(function () {
// //                 console.log('get info')
// //             }, 1000)
// //         }, 2000)
// //     }, 3000)
// // }
// // getinfo()


// //Es2015-----promise
// //async call sync execution in better way removing call back hell


// //basic promise


// let pro=new Promise(function(resolve,reject){

//     let a=10
//     let b=100

//     if(a==b){
//         resolve("hello")
//     }
//     else{
//         reject("bye")
//     }
// })

// //consuming the Promise

// pro.then(function(a){
//     console.log(a)
// },function(b){
//     console.log(b)
// })

// console.log('--------------------------------')

// let pro2=new Promise(function(resolve,reject){

//     let a=10
//     let b=100

//     if(a==b){
//         resolve([11,22,33])
//     }
//     else{
//         reject[-11,-22,-33]
//     }
// })

////comsuming the promise

// pro2.then(function(a){
//     console.log(a[0])
// }).catch(function(b){
//     console.log(b)
// })
// .finally(function(){
//     console.log("i will execute")
// })

// function getinfo(){
//     setTimeout(function(){
//         console.log('user created')
//         setTimeout(function(){
//             console.log('id')
//             setTimeout(function(){
//                 console.log('get info')
//             },1000)
//         },2000)
//     },3000)
// }
// getinfo()

function createUser(){
    return new Promise(function(resolve,reject){
        setTimeout(function(){
            resolve('user created')
        },3000)
    })
}

function getid(){
    return new Promise(function(resolve,reject){
        setTimeout(function(){
            resolve('id found')
        },2000)
    }) 
}

function userinfo(){
    return new Promise(function(resolve,reject){
        setTimeout(function(){
            resolve('user info')
        },1000)
    })
}

createUser().then(function(a){
    console.log(a)
    return getid()
})
.then(function(b){
    console.log(b)
    return userinfo()

}).then(function(c){
    console.log(c)
})


async function getUserinfo(){
let a=await createUser()
console.log(a)
let b=await getid()
console.log(b)
let c= await userinfo()
console.log(c)
}
getUserinfo()